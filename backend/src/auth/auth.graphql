enum AuthType {
    EMAIL
    GOOGLE
    FACEBOOK
    MICROSOFT
    GITHUB
}

enum UserRole {
    DEFAULT
    ADMIN
    SUPERADMIN
}

type User {
    id: ID!
    fullName: String!
    email: String!
    created_at: Date!
    updated_at: Date
    role: UserRole
    enabled: Boolean!
}

type AuthenticatedUser {
    id: ID!
    fullName: String!
    email: String!
    language: String!
    theme: String,
    created_at: Date!
    updated_at: Date
    token: String!
    role: UserRole
}

type Query {
    session: AuthenticatedUser
    admins: [User]
    users: [User]
}

type Mutation {
    loginOffice(token: String!): AuthenticatedUser
    loginExternal(email: String!, name: String!, provider: AuthType!, token: String! ): AuthenticatedUser
    loginEmail(email: String!, password: String!): AuthenticatedUser
    createUserEmail(email: String!, password: String!, fullName: String!, role: UserRole): User
    adminEditUser(userId: ID!, email: String, fullName: String, className: String, role: UserRole): User
    editUser(email: String, fullName: String, className: String, language: String, theme: String): User
    removeUser(email: String!): Boolean
    logout: Boolean
}