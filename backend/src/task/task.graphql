enum State {
    UNRESOLVED
    SOLVING
    SOLVED
    RETURNED
}

type Comment {
    id: ID!
    author: User!
    created_at: Date!
    updated_at: Date!
    message: String!
}

type SubTask{
    id: ID!
    message: String!
    completed: Boolean
    completed_at: Date
    task: Task!
    created_at: Date!
}

type Task {
    id: ID!
    subject: String!
    issue: String!
    author: User!
    assignee: User
    enabled: Boolean!
    created_at: Date!
    updated_at: Date
    state: State!
    subtasks: [SubTask]
    comments: [Comment]
}

type Query{
    tasks: [Task]
    task(id: ID): Task
}

type Mutation {
    addTask(subject: String!, issue: String!, assigneeId: ID): Task
    changeTaskState(taskId: ID, comment: String, state: State, assigneeId: ID, enabled: Boolean): Task
    deleteTask(taskId: ID): Boolean
    addSubTask(taskId: ID!, message: String!): SubTask
    changeSubTask(subTaskId: ID!, message: String, completed: Boolean): SubTask
    deleteSubTask(subTaskId: ID!): Boolean
    addComment(taskId: ID!, message: String!): Comment
    changeComment(commentId: ID!, message: String): Comment
    deleteComment(subTaskId: ID!): Boolean
}

